let oltDataMap = {};

context.panel.data.series.forEach((series) => {
  let oltNames = [];
  let values = [];

  series.fields.forEach((field) => {
    if (field.type === 'string') {
      oltNames = field.values.toArray();
    } else if (field.type === 'number') {
      values = field.values.toArray();
    }
  });

  oltNames.forEach((olt, index) => {
    let value = values[index] || 0;
    oltDataMap[olt] = (oltDataMap[olt] || 0) + value;
  });
});

let topOltData = Object.entries(oltDataMap)
  .map(([name, value]) => ({ name, value }))
  .sort((a, b) => b.value - a.value);

return {
  title: {
    text: '',
    left: '2%',
    top: '2%',
    textStyle: {
      color: '#FFFFFF',
      fontSize: 20,
      fontWeight: '400',
      fontFamily: 'Bebas Neue',
    },
  },
  toolbox: {
    show: true,
    orient: 'horizontal',
    left: '2%',
    bottom: '2%',
    iconStyle: {
      borderColor: '#FFFFFF',
      borderWidth: 2,
    },
    feature: {
      saveAsImage: {
        show: true,
        title: 'Salvar como Imagem',
        iconStyle: {
          borderColor: '#FFFFFF',
          borderWidth: 2,
        },
      },
      restore: {
        show: true,
        title: 'Atualizar',
        iconStyle: {
          borderColor: '#FFFFFF',
          borderWidth: 2,
        },
      },
    },
  },
  series: [
    {
      name: 'Volts',
      type: 'pie',
      roseType: 'radius',
      radius: ['15%', '40%'],
      center: ['50%', '50%'],
      avoidLabelOverlap: false,
      label: {
        show: true,
        formatter: '{b}: {c}',
        color: '#FFFFFF',
        fontSize: 16,
        fontWeight: '400',
        fontFamily: 'Bebas Neue',
      },
      labelLine: {
        show: true,
        lineStyle: {
          color: '#FFFFFF',
          width: 2,
        },
      },
      data: topOltData.map((item) => ({
        name: item.name
          .replace(/^OpenVPN Server\s*/, '')  // Remove "OpenVPN Server" de todos os nomes
          .trim(),
        value: Math.round(item.value),
        itemStyle: {
          color: new context.echarts.graphic.LinearGradient(0, 0, 0, 1, [
            { offset: 0, color: '#00E96A' },
            { offset: 1, color: '#217571' }
          ]),
          shadowBlur: 25,
          shadowColor: 'rgba(0, 128, 128, 1)',
          borderWidth: 1,
          borderColor: 'rgba(0, 0, 0, 0.5)',
          borderRadius: 10,
        },
      })),
    },
  ],
};
